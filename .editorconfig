root = true

[*]
indent_style = space
indent_size = 4

[*.{md,yml,yaml}]
indent_size = 2

[Makefile]
indent_style = tab

[*.{sh,bash,csh}]
end_of_line = lf

[*.{bat,cmd,ps1}]
end_of_line = crlf

[*.ps1]
charset=utf-8-bom

[*.{js,py,html,htm,css,xml}]
charset = utf-8

[*]
trim_trailing_whitespace = true

[*.md]
trim_trailing_whitespace = false

[*]
insert_final_newline = true

[.editorconfig]
max_line_length=80

[*.{csproj,props,targets}]
indent_size = 2

## Language conventions
# Dotnet code style settings:

[*.{cs,csx,cake,vb}]
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_event = false : warning
dotnet_style_qualification_for_field = false : warning
dotnet_style_qualification_for_method = false : warning
dotnet_style_qualification_for_property = false : warning

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# Expression-level preferences
dotnet_style_coalesce_expression = true : suggestion
dotnet_style_collection_initializer = true : suggestion
dotnet_style_explicit_tuple_names = true : warning
dotnet_style_null_propagation = true : suggestion
dotnet_style_object_initializer = true : suggestion
dotnet_style_require_accessibility_modifiers = always : warning

dotnet_style_prefer_is_null_check_over_reference_equality_method = true : warning
dotnet_style_readonly_field = true : warning
dotnet_style_prefer_auto_properties = true : suggestion
dotnet_style_prefer_inferred_tuple_names = true : suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true : suggestion

# CSharp code style settings:
[*.cs]
# Prefer "var" everywhere (Implicit and explicit types)
csharp_style_var_elsewhere = true : suggestion
csharp_style_var_for_built_in_types = true : suggestion
csharp_style_var_when_type_is_apparent = true : warning

# Expression-Bodied members
csharp_style_expression_bodied_accessors = true : suggestion
csharp_style_expression_bodied_indexers = true : suggestion
csharp_style_expression_bodied_operators = true : suggestion
csharp_style_expression_bodied_properties = true : suggestion
# Explicitly disabled due to difference in coding style between source and tests
#csharp_style_expression_bodied_constructors = true : warning
#csharp_style_expression_bodied_methods = true : warning

# Pattern matching
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion

# Inlined variable declarations
csharp_style_inlined_variable_declaration = true : suggestion

# Expression-level preferences
csharp_prefer_inferred_anonymous_type_member_names = true : warning
csharp_prefer_inferred_tuple_names = true : warning
csharp_prefer_simple_default_expression = true : warning
csharp_preferred_modifier_order = public,private,protected,internal,const,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
csharp_style_deconstructed_variable_declaration = true : warning
csharp_style_pattern_local_over_anonymous_function = true : warning

# Null-checking preference
csharp_style_conditional_delegate_call = true : warning
csharp_style_throw_expression = true : warning

# Code block preferences
csharp_prefer_braces = when_multiline : suggestion

## Formatting conventions
# Dotnet formatting settings:
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# CSharp formatting settings:
[*.cs]
# Newline options
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Identation options
csharp_indent_case_contents = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping options
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

## Naming conventions
[*.{cs,vb}]

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_style.local_function_style.capitalization = pascal_case

# Type Parameters
dotnet_naming_style.type_parameter_style.capitalization = pascal_case
dotnet_naming_style.type_parameter_style.required_prefix = T

dotnet_naming_rule.type_parameter_naming.symbols = type_parameter_symbol
dotnet_naming_rule.type_parameter_naming.style = type_parameter_style
dotnet_naming_rule.type_parameter_naming.severity = warning
dotnet_naming_symbols.type_parameter_symbol.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter_symbol.applicable_accessibilities = *

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

MA0051.maximum_lines_per_method = 100
MA0051.maximum_statements_per_method = 100
MA0053.public_class_should_be_sealed = false

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = warning

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = silent

# IDE0079: Remove unnecessary suppression (false-positive)
dotnet_diagnostic.IDE0079.severity = silent

# SA1000: The keyword new should be followed by a space
dotnet_diagnostic.SA1000.severity = none

# SA1025: Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = silent

# SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = none

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = silent

# SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = none

# SA1308: Variable names should not be prefixed
dotnet_diagnostic.SA1308.severity = silent

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1310: Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = none

# The default VS refactoring works better and MA0048 detects the same pattern
# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = silent

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = silent

# SA1601: Partial elements should be documented
dotnet_diagnostic.SA1601.severity = none

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = silent

# SA1623: Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = silent

# SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = silent

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

###################### TO DO: FIX (OR MOVE TO SECTION ABOVE) THE FOLLOWING ######################

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = none

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = none

# CA1054: Change the type of parameter queueUrl of method from string to System.Uri
dotnet_diagnostic.CA1054.severity = none

# CA1056: Change the type of property from string to System.Uri
dotnet_diagnostic.CA1056.severity = none

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1066: Type {0} should implement IEquatable<T> because it overrides Equals
dotnet_diagnostic.CA1066.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = none

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# CA1825: Avoid zero-length array allocations.
# NOTE: Array.Empty<T> is not available in .NET 4.5
dotnet_diagnostic.CA1825.severity = none

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = none

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = none

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = none

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = none

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = none

# CS0618: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = none

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = silent

# MA0005: Use Array.Empty<T>()
# NOTE: Array.Empty<T> is not available in .NET 4.5
dotnet_diagnostic.MA0005.severity = none

# MA0008: Add StructLayoutAttribute
dotnet_diagnostic.MA0008.severity = none

# MA0011: IFormatProvider is missing
dotnet_diagnostic.MA0011.severity = none

# MA0015: Specify the parameter name
dotnet_diagnostic.MA0015.severity = none

# MA0016: Prefer return collection abstraction instead of implementation
dotnet_diagnostic.MA0016.severity = none

# MA0025: TODO Implement the functionality
dotnet_diagnostic.MA0025.severity = none

# MA0045: Do not use blocking call (make method async)
dotnet_diagnostic.MA0045.severity = none

# MA0048: File name must match type name
dotnet_diagnostic.MA0048.severity = none

# Method too long
dotnet_diagnostic.MA0051.severity = none

# MA0061: Method overrides should not change parameter defaults
dotnet_diagnostic.MA0061.severity = none

# MA0069: Non-constant static fields should not be visible
dotnet_diagnostic.MA0069.severity = none

# SA0001: XML comment analysis is disabled due to project configuration
dotnet_diagnostic.SA0001.severity = none

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = none

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = silent

# SA1214: Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1214.severity = none

# SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = none

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = silent

# SA1313: Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = none

# SA1401: Fields should be private
dotnet_diagnostic.SA1401.severity = none

# SA1604: Element documentation should have summary
dotnet_diagnostic.SA1604.severity = none

# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = none

# SA1614: Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = none

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# SA1616: Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = none

# SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = none

# SA1636: File header copyright text should match
dotnet_diagnostic.SA1636.severity = none

# SA1649: File name should match first type name
dotnet_diagnostic.SA1649.severity = none
